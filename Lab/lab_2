/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   main.cpp
 * Author: Kevin Maltz
 *
 * Created on September 18, 2017, 11:20 AM
 */

#include <cstdlib>
#include <iostream>
#include <ctime>
#include <iomanip>

using namespace std;

float cMean(int num[], const int SIZE);

float cMedian(int num[], const int SIZE);

void filAray(int num[], const int SIZE);

void cMode(int num[],int const SIZE, int modeAr[]);

/*
 * 
 */
int main(int argc, char** argv) 
{
    const int SIZE = 100;
    
    int nums[SIZE];
    int mode[SIZE/2 + 3];
    float median;
    float mean;
    
    //Fill array
    filAray(nums, SIZE);
    
    //Sort array
    int minV;
    int minI;
    for(int i=0; i < (SIZE + 1); i++)
    {
        minI = i;
        minV = nums[i];
        for(int j=i+1; j < SIZE; j++)
        {
            if(nums[j] < minV)
            {
                minV = nums[j];
                minI = j;
            }
        }
        nums[minI] = nums[i];
        nums[i] = minV;
    }
    
    mean = cMean(nums, SIZE);
    median = cMedian(nums, SIZE);
    cMode(nums, SIZE, mode);
    
    return 0;
}

float cMean(int num[], const int SIZE)
{
    int total = 0;
    for(int i=0; i < SIZE; i++)
    {
        total += num[i];
    }
    return static_cast<float>(total)/SIZE;
}

float cMedian(int num[], const int SIZE)
{
    float median;
    
    if(SIZE%2==0)
        median = (num[SIZE/2] + num[SIZE/2 + 1]) / 2.0;
    else
        median = num[SIZE/2 + 1];
    return median;
}

void filAray(int num[], const int SIZE)
{
    srand(time(NULL));
    
    //Fill array
    for(int i=0; i < SIZE; i++)
    {
        num[i] = rand()%100;
    }
}
void cMode(int num[],int const SIZE, int modeAr[])
{
    int cI = 2;  //current modeAr index
    int freq = 1;   //frequency of a number
    int maxf = 2; //Max frequency found so far
    
    for(int i=0; i < SIZE;i++)
    {
        if(num[i]==num[i+1])
            freq++; //add +1 to current frequency
        else
        {
            if(freq > maxf)
            {
                modeAr[0] = num[i];
                cI = 3;
                maxf = freq;
                freq = 0;
            }
            else if(freq == maxf)
            {
                modeAr[cI] = num[i];
                cI++;
                freq = 0;
            }
        }
    }
    
    modeAr[0] = cI - 1;
    modeAr[1] = maxf;
}
